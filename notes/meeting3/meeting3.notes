=======================================
           !! STACKS and Queues
=======================================

[python]

class Node:  # This is a LinkedListNode!

    def __init__(self, value):
        self.value = value
        self.next = None

class Stack:

    def __init__(self):
        self.top = None

    def push(self, value):
        ...

    def peek(self):
        ...

    def pop(self):
        ...

[/python]

------------ beg_meeting3 ------------

# Here's what we're going to cover today:
0) Review of Linked Lists
    => Tricky edge cases
    => Calculator addition example

1) Introduction to Stacks & Queues
    a) Buffers
        => LIFO
        => FIFO
        => Circular Buffer
    b) Why use a Stack?
    c) How to implement a stack?
        => Linked Lists!
        => Arrays too =]

2) Common Stack Algorithms
    a) Push
    b) Peek
    c) Pop
    d) PopValue

3) Most Common Interview Questions
    a) Reverse a Linked List
    b) Towers of Hanoi
    =>    |    |    |
    =>    o    |    |
    =>    O    |    |
    =>    0    |    |
    =>   ---  ---  ---
    c) Queue using a stack (next week)

4) <Group Activity - set_of_stacks.notes>

5) Next Week Peak
    => Stacks + Queues cont. (LIFO/FIFO)

------------ end_meeting3 ------------
